class UmpleToJava {
  association_SetOptionalOneToOptionalN_specialization <<!  /* Code from template association_SetOptionalOneToOptionalN_specialization */
<</*association_SetOptionalOneToOptionalN_specialization*/>>  public boolean <<=gen.translate("setMethod",av)>>(<<=gen.translate("type",av)>> <<=gen.translate("parameterOne",av)>>)
  {
    boolean wasSet = false;
    <<# if (customSetPrefixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPrefixCode,gen.translate("setMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPrefixCode, "    ")); } #>>
    if (<<=gen.translate("parameterOne",av)>> != null && <<=gen.translate("parameterOne",av)>>.<<=gen.relatedTranslate("numberOfMethod",av)>>() >= <<=gen.translate("type",av)>>.<<=gen.relatedTranslate("maximumNumberOfMethod",av)>>_<<=gen.relatedTranslate("type",av)>>())
    {
      <<# if (customSetPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPostfixCode,gen.translate("setMethod",av)); 
      append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPostfixCode, "      ")); } #>>
      return wasSet;
    }

    
<<# if (!reqSetCode) { #>>
    wasSet = super.<<=gen.translate("setMethod",av)>>(<<=gen.translate("parameterOne",av)>>);
    <<# } else { #>>
    super.clear_<<# if (mulChangedToOne) { #>><<=gen.translate("associationMany",av)>><<# } else { #>><<=gen.translate("associationOne",av)>><<# } #>>();
    wasSet = <<=gen.translate("addMethod",av)>>(<<=gen.translate("parameterOne",av)>>);
    <<# } #>>
    <<# if (customSetPostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customSetPostfixCode,gen.translate("setMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customSetPostfixCode, "    ")); } #>>
    return wasSet;
  }
!>>
}
