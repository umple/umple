<?xml version="1.0" encoding="UTF-8"?>
<project basedir=".." default="build" name="UmpleCore" >

  <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
  <taskdef resource="net/sf/antcontrib/antlib.xml" />

  <property name="myenv" value="cc" />

  <property name="project.output.path" value="temp" />
  <property name="java.path" value="${project.output.path}/java" />
  <property name="python.path" value="${project.output.path}/python" />
  <property name="cpp.path" value="${project.output.path}/cpp" />
  <property name="php.path" value="${project.output.path}/php" />
  <property name="ruby.path" value="${project.output.path}/ruby" />

  <property name="manualumpfiles.path" value="umpleonline/umplibrary/manualexamples" />
  <property name="exampleumpfiles.path" value="umpleonline/umplibrary" />

  <import file="_${myenv}.xml" />
  <import file="_template.xml" />

  <!-- options -->
  <property name="logfile" value="UserManualAndExampleTests_output.txt" />
  <property name="examplepattern" value="*.ump" />
  <property name="failfast" value="true" />
  <property name="threadcount" value="4"/>
  <property name="cleanonfinish" value="true" />

  <!-- Entry points (SEE FURTHER BELOW THIS FOR NEWER EXPERIMENT)-->

  <target name="allUserManualAndExampleTests" depends="startLog,deleteTempFolders,testSetup">
    <echo>Building User Manual and UmpleOnline Examples</echo>
    <echo>See ${fulllogfile} for build results</echo>

    <!-- Forces ruby to be skipped unless allowruby is set to true 
    on the command line or in the ruby-specific target. -->
    <property name="allowruby" value="false" />
    <antcall target="checkRuby" />

    <!-- Forces C++ to be skipped unless allowcpp is set to true
    on the command line or if the C++ specific target is used. -->
    <property name="allowcpp" value="false" />
    <antcall target="checkCpp" />

    <trycatch>
      <try>
        <antcall target="newUserManualAndExampleTestsJava" /> <!-- New replacement for above -->
        <antcall target="newUserManualAndExampleTestsPython" /> <!-- New replacement for above -->
        <antcall target="newUserManualAndExampleTestsCpp" />
        <antcall target="newUserManualAndExampleTestsPhp" /> <!-- New replacement for above -->
        <!--<antcall target="doRuby" />-->
      </try>
      
      <finally>
        <antcall target="finishLog" />
        <if>
          <equals arg1="${cleanonfinish}" arg2="true" />
          <then>
            <antcall target="deleteTempFolders" />
          </then>
        </if>
        <echo>See build/${logfile} for build results</echo>
      </finally>
    </trycatch>
  </target>

  <!-- The following is a much more efficient total replacement for the earlier targets -->
  
  <target name="newUserManualAndExampleTestsJava">
    <echo>Building User Manual and UmpleOnline Examples for Java and compiling Java using -c - option and method inside the compiler.</echo>
  
    <!-- Pick all the relevant examples to test -->
    <fileset dir="${java.path}" includes="*.ump" id="javaumpfiles">
      <!-- Special cases - temporary until error detection-->
      <exclude name="E0*.ump" />
      <exclude name="E1*.ump" />
      <exclude name="E2*.ump" />
      <exclude name="E3*.ump" />
      <exclude name="E4*.ump" />      
      <exclude name="WE1xxIdentifierInvalid1.ump" />
      <exclude name="WE1xxIdentifierInvalid3.ump" />
      <exclude name="WE1xxIdentifierInvalid5.ump" />
      <exclude name="WE1xxIdentifierInvalid6.ump" />
      <exclude name="WE1xxIdentifierInvalid7.ump" />
      <exclude name="W142TypeIsAccessSpecifierAmbiguous.ump" />
      <!-- This fails to compile because they are incomplete examples of umple -->
      <exclude name="UseStatements1.ump" />
      <!-- Temporary exclusion .. challenges compiling in ant only to fix -->
      <exclude name="NamespaceDirectives4.ump" />
      <exclude name="HtmlGeneration2.ump" />
      <exclude name="OBDCarSystem.ump" />
      <!-- The following is excluded because it embeds unsafe code which would need to be replaced -->
      <exclude name="ComplexStateMachine.ump"/>
      <!-- The following is temporarily excluded because of an odd Java error only on the server not Mac -->
      <exclude name="W010SingletonMultiplicityOver12.ump"/>
      <!-- The following is temporarily excluded because of an error  -->
      <exclude name="NamespaceDirectives1.ump"/>
    </fileset>  

    <pathconvert pathsep=";" property="javaumpfiles2" refid="javaumpfiles"/>
    
    <echo file="${java.path}/allExamplesList.txt">${javaumpfiles2}</echo>

    <replace file="${java.path}/allExamplesList.txt" token=";" value="&#10;"/>
    <echo>Umple examples to be tested and Java tested are in "${java.path}/allExamplesList.txt"</echo>

    <copy file="${java.path}/allExamplesList.txt" todir="${dist.dir}/qa"/>

    <!-- Compile in umple to Java and generate the Java -->
      <trycatch>
        <try>
          <java jar="${dist.dir}/${dist.umple.jar}" fork="true" failonerror="true" dir="${java.path}">
            <arg value="-g" />
            <arg value="Java" />
            <arg value="--path" />
            <arg value="src-gen-umple" />
            <!--arg value="-r" --> <!-- Uncomment to remove prev generated java+class files before each compile -->
            <arg value="-w" /> <!-- Suppress expected warnings for files starting W -->
            <arg value="-q" /> <!-- Comment out for more verbose trace -->
            <arg value="-c" /> <!-- Do the Java compilation of whatever is produced by Umple -->
            <arg value="-" />
            <!--arg value="-x" --> <!-- Uncomment to use slower exec method of invoking compiler instead of internal -->           
            <arg value="-f" /> <!-- Do separate generation and compilation for each line in this file -->
            <arg value="allExamplesList.txt" />
          </java>
        </try>

        <catch>
          <echo>Failed to compile Umple and/or generate Java code from one or more examples and/or to compile the resulting Java</echo>
          <if>
            <equals arg1="${failfast}" arg2="true" />
            <then>
              <fail message="Failed tests of an Umpleonline or manual example when generating and compiling the Java"/>
            </then>
          </if>
        </catch>
      </trycatch>

  </target>

  <target name="newUserManualAndExampleTestsPython">
    <echo>Building User Manual and UmpleOnline Examples for Python and compiling Python using -c - option and method inside the compiler.</echo>
  
    <!-- Pick all the relevant examples to test -->
    <fileset dir="${python.path}" includes="*.ump" id="pythonumpfiles">
      <!-- Special cases - temporary until error detection-->
      <exclude name="E0*.ump" />
      <exclude name="E1*.ump" />
      <exclude name="E2*.ump" />
      <exclude name="E3*.ump" />
      <exclude name="E4*.ump" />      
      <exclude name="WE1xxIdentifierInvalid1.ump" />
      <exclude name="WE1xxIdentifierInvalid3.ump" />
      <exclude name="WE1xxIdentifierInvalid5.ump" />
      <exclude name="WE1xxIdentifierInvalid6.ump" />
      <exclude name="WE1xxIdentifierInvalid7.ump" />
      <exclude name="W142TypeIsAccessSpecifierAmbiguous.ump" />
      <!-- This fails to compile because they are incomplete examples of umple -->
      <exclude name="UseStatements1.ump" />
      <!-- Temporary exclusion .. challenges compiling in ant only to fix -->
      <exclude name="NamespaceDirectives4.ump" />
      <exclude name="HtmlGeneration2.ump" />
      <exclude name="OBDCarSystem.ump" />
      <!-- The following is excluded because it embeds unsafe code which would need to be replaced -->
      <exclude name="ComplexStateMachine.ump"/>
      <!-- The following is temporarily excluded because of an odd Java error only on the server not Mac -->
      <exclude name="W010SingletonMultiplicityOver12.ump"/>

      <!-- Contains the Java specific TimerTask class-->
      <exclude name="Dishwasher.ump"/> <!-- uses synchronized keyword -->

      <exclude name="W1012MethodNotFoundInjection1.ump"/> <!-- meant to be error -->

      <!-- April 2023, no longer excluded 
      <exclude name="AccessControl2.ump"/>
      <exclude name="CanalLockStateMachine.ump"/>
      <exclude name="Elevator_State_Machine.ump"/>
      <exclude name="LibraryLoanStateMachine.ump"/>
      <exclude name="TimedCommands.ump"/>
      <exclude name="TrafficLightsB.ump"/>
       -->


      <!-- Contains the Java specific Thread class -->
      <!-- April 2023, no longer excluded 
      <exclude name="Auto-Transitions1.ump"/>
      <exclude name="BcmsBaseConfiguration.ump"/>
      <exclude name="BcmsMultipleCrisis-Multiple-Coordinator-Configuration.ump"/>
      <exclude name="Ball_Game.ump"/>
      <exclude name="MicrowaveOven2.ump"/>
      <exclude name="Runway.ump"/> 
      <exclude name="StateMachineActionsandDoActivities1.ump"/>
      -->
      
      <!-- Contains the Java specific Message class + Threading  -->
      <exclude name="CodeInjectioninCustomMethods1.ump"/>
      <exclude name="CodeInjectioninEventMethods1.ump"/>
      <exclude name="QueuedStateMachines1.ump"/>
      <exclude name="SecurityLight.ump"/>
      <exclude name="UnspecifiedEvents2.ump"/>

      <!-- Contains Java specific classes used to generate HTML -->
      <exclude name="BasicTemplates1.ump"/>
      <exclude name="BasicTemplates2.ump"/>
      <exclude name="BasicTemplates3.ump"/>
      <exclude name="HtmlGeneration.ump"/>

      <!-- Other issues bugs -->
      <exclude name="AroundStatement1.ump"/>  <!-- Code Injection -->
      <exclude name="AroundStatement2.ump"/>  <!-- Code Injection -->
      <exclude name="PingPong.ump"/>  <!-- Code Injection -->
      <exclude name="PooledStateMachines1.ump"/> <!-- Hashmaps failling to translate -->
      <exclude name="StateDependentMethods1.ump"/> <!-- Return nothing on a switch case -->
      <exclude name="StateDependentMethods2.ump"/> <!-- Return nothing on a switch case -->
      <exclude name="TcpIpSimulation.ump"/> <!-- uses synchronized keyword -->
      <exclude name="W082ConflictingModifiers.ump"/> <!-- Contains raw java code -->
      <exclude name="W1006StateMachineNotParsed1.ump"/>
      <exclude name="W1007ElementNotParsed1.ump"/>
      <exclude name="W1010ConstraintSyntaxNotProcessed1.ump"/>
      <exclude name="NullExample.ump"/>

      <!-- Contains Java specific classes for tracing -->
      <exclude name="Phone.ump"/>
      <exclude name="Tracers1.ump"/>
      <exclude name="Tracers2.ump"/>
      <exclude name="Tracers3.ump"/>
      <exclude name="Tracers4.ump"/>
      <exclude name="Tracers5.ump"/>
      <exclude name="TracingAssociations1.ump"/>
      <exclude name="TracingAssociations2.ump"/>
      <exclude name="TracingAssociations3.ump"/>
      <exclude name="TracingAttributes1.ump"/>
      <exclude name="TracingAttributes2.ump"/>
      <exclude name="TracingAttributes3.ump"/>
      <exclude name="TracingAttributeswithConditions2.ump"/>
      <exclude name="TracingAttributeswithOccurrences1.ump"/>
      <exclude name="TracingAttributeswithOccurrences2.ump"/>
      <exclude name="TracingAttributeswithtimeline1.ump"/>
      <exclude name="TracingAttributeswithtimeline2.ump"/>
      <exclude name="TracingBasics1.ump"/>
      <exclude name="TracingBasics2.ump"/>
      <exclude name="TracingConstraints1.ump"/>
      <exclude name="TracingConstraints2.ump"/>
      <exclude name="TracingConstraints3.ump"/>
      <exclude name="TracingMethods1.ump"/>
      <exclude name="TracingMethods2.ump"/>
      <exclude name="TracingStateMachines1.ump"/>
      <exclude name="TracingStateMachines2.ump"/>
      <exclude name="TracingStateMachines3.ump"/>
      <exclude name="W301TracingEntityNotFound1.ump"/>
      <exclude name="W301TracingEntityNotFound2.ump"/>
      <exclude name="W302TracerNotRecognized1.ump"/>
      <exclude name="W302TracerNotRecognized2.ump"/>
    </fileset> 

    <pathconvert pathsep=";" property="pythonumpfiles2" refid="pythonumpfiles"/>
    
    <echo file="${python.path}/allExamplesList.txt">${pythonumpfiles2}</echo>

    <replace file="${python.path}/allExamplesList.txt" token=";" value="&#10;"/>
    <echo>Umple examples to be tested and Python tested are in "${python.path}/allExamplesList.txt"</echo>

    <copy file="${python.path}/allExamplesList.txt" todir="${dist.dir}/qa"/>

    <!-- Compile in umple to Python and generate the Python -->
      <trycatch>
        <try>
          <java jar="${dist.dir}/${dist.umple.jar}" fork="true" failonerror="true" dir="${python.path}">
            <arg value="-g" />
            <arg value="Python" />
            <arg value="--path" />
            <arg value="src-gen-umple" />
            <!--arg value="-r" --> <!-- Uncomment to remove prev generated java+class files before each compile -->
            <arg value="-w" /> <!-- Suppress expected warnings for files starting W -->
            <arg value="-q" /> <!-- Comment out for more verbose trace -->
            <arg value="-c" /> <!-- Do the Java compilation of whatever is produced by Umple -->
            <arg value="-" />
            <!--arg value="-x" --> <!-- Uncomment to use slower exec method of invoking compiler instead of internal -->           
            <arg value="-f" /> <!-- Do separate generation and compilation for each line in this file -->
            <arg value="allExamplesList.txt" />
          </java>
        </try>

        <catch>
          <echo>Failed to compile Umple and/or generate Python code from one or more examples</echo>
          <if>
            <equals arg1="${failfast}" arg2="true" />
            <then>
              <fail message="Failed tests of an Umpleonline or manual example when generating and compiling the Python"/>
            </then>
          </if>
        </catch>
      </trycatch>

  </target>
  
  <target name="newUserManualAndExampleTestsPhp">
    <echo>Building User Manual and UmpleOnline Examples for Php and checking validity of Php using -c - option.</echo>
  
    <!-- Pick all the relevant examples to test -->
    <fileset dir="${php.path}" includes="*.ump" id="phpumpfiles">
      <!-- Special cases - temporary until error detection-->
      <exclude name="E0*.ump" />
      <exclude name="E1*.ump" />
      <exclude name="E2*.ump" />
      <exclude name="E3*.ump" />
      <exclude name="E4*.ump" />      
      <exclude name="WE1xxIdentifierInvalid1.ump" />
      <exclude name="WE1xxIdentifierInvalid3.ump" />
      <exclude name="WE1xxIdentifierInvalid5.ump" />
      <exclude name="WE1xxIdentifierInvalid6.ump" />
      <exclude name="WE1xxIdentifierInvalid7.ump" />
      <exclude name="W142TypeIsAccessSpecifierAmbiguous.ump" />
      <!-- This fails to compile because they are incomplete examples of umple -->
      <exclude name="UseStatements1.ump" />
      <!-- Temporary exclusion .. challenges compiling in ant only to fix -->
      <exclude name="NamespaceDirectives4.ump" />
      <exclude name="HtmlGeneration2.ump" />
      <exclude name="OBDCarSystem.ump" />
      <!-- The following is ecluded because it embeds unsafe code which would need to be replaced -->
      <exclude name="ComplexStateMachine.ump"/>
      <exclude name="Tracers2.ump" />
      <!-- These fail to compile because PHP has no log4j tracer -->
      <exclude name="Tracers3.ump" />
      <exclude name="Tracers4.ump" />
      <!-- This fails to compile because PHP has no LTTNG tracer -->
      <exclude name="Tracers5.ump" />
      <!-- The following is temporarily excluded because of an odd Java error only on the server not Mac -->
      <exclude name="W010SingletonMultiplicityOver12.ump"/>
    </fileset>  

    <pathconvert pathsep=";" property="phpumpfiles2" refid="phpumpfiles"/>
    
    <echo file="${php.path}/allExamplesListPhp.txt">${phpumpfiles2}</echo>

    <replace file="${php.path}/allExamplesListPhp.txt" token=";" value="&#10;"/>
    <echo>Umple examples to be tested and Php Compiled are in "${php.path}/allExamplesListPhp.txt"</echo>

    <copy file="${php.path}/allExamplesListPhp.txt" todir="${dist.dir}/qa"/>

    <!-- Compile in umple to Php and generate the Java -->
      <trycatch>
        <try>
          <java jar="${dist.dir}/${dist.umple.jar}" fork="true" failonerror="true" dir="${php.path}">
            <arg value="-g" />
            <arg value="Php" />
            <arg value="--path" />
            <arg value="src-gen-umple" />
            <!--arg value="-r" --> <!-- Uncomment to remove prev generated java+class files before each compile -->
            <arg value="-w" /> <!-- Suppress expected warnings for files starting W -->
            <arg value="-q" /> <!-- Comment out for more verbose trace -->
            <arg value="-c" /> <!-- Do the Java compilation of whatever is produced by Umple -->
            <arg value="-" />
            <!--arg value="-x" --> <!-- Uncomment to use slower exec method of invoking compiler instead of internal -->           
            <arg value="-f" /> <!-- Do separate generation and compilation for each line in this file -->
            <arg value="allExamplesListPhp.txt" />
          </java>
        </try>

        <catch>
          <echo>Failed to compile Umple and/or generate Php code from one or more examples and/or to compile the resulting Php</echo>
          <if>
            <equals arg1="${failfast}" arg2="true" />
            <then>
              <fail message="Failed tests of an Umpleonline or manual example when generating and compiling the Php"/>
            </then>
          </if>
        </catch>
      </trycatch>

  </target>

  <target name="newUserManualAndExampleTestsCpp">
    <echo>Building User Manual and UmpleOnline Examples for RTCpp and checking validity of RTCpp using -c - option.</echo>
  
    <!-- Pick all the relevant examples to test -->
    <fileset dir="${cpp.path}" includes="*.ump" id="cppumpfiles">
      <!-- Special cases - temporary until error detection-->
      <exclude name="OBDCarSystem.ump"/>
      <exclude name="ActiveObjects1.ump"/>
      <exclude name="AgentsCommunication.ump"/>
      <exclude name="Auto-Transitions1.ump"/>
      <exclude name="ClassDefinition1.ump"/>
      <exclude name="CodeInjectioninEventMethods1.ump"/>
      <exclude name="CollisionAvoidanceA1.ump"/>
      <exclude name="CollisionAvoidanceA2.ump"/>
      <exclude name="CollisionAvoidanceA3.ump"/>
      <exclude name="ComplexStateMachine.ump"/>
      <exclude name="ConcurrencyUsingDoActivities1.ump"/>
      <exclude name="ConcurrencyUsingDoActivities2.ump"/>
      <exclude name="CoordinationStateMachine.ump"/>
      <exclude name="DelegationPattern1.ump"/>
      <exclude name="Dishwasher.ump"/>
      <exclude name="ExternalInterface.ump"/>
      <exclude name="HomeHeater.ump"/>
      <exclude name="HtmlGeneration.ump"/>
      <exclude name="MicrowaveOven2.ump"/>
      <exclude name="NestedStateMachines2.ump"/>
      <exclude name="NestedStateMachines3.ump"/>
      <exclude name="PooledStateMachines1.ump"/>
      <exclude name="QueuedStateMachines1.ump"/>
      <exclude name="SecurityLight.ump"/>
      <exclude name="SortedAssociations1.ump"/>
      <exclude name="SortedAssociations2.ump"/>
      <exclude name="StateMachineActionsandDoActivities1.ump"/>
      <exclude name="TcpIpSimulation.txt.ump"/>
      <exclude name="TimedCommands.ump"/>
      <exclude name="TimedTransitions1.ump"/>
      <exclude name="TimedTransitions2.ump"/>
      <exclude name="traits_example_022.ump"/>
      <exclude name="traits_example_multifeature.ump"/>
      <exclude name="E013NonImmutableAssociation1.ump"/>
      <exclude name="E019DuplicateAssociation3.ump"/>
      <exclude name="E021InvalidReflexiveAssociation1.ump"/>
      <exclude name="E034MultipleInheritance1.ump"/>
      <exclude name="E037UninitializedConstantObject1.ump"/>
      <exclude name="E058RegularQueuedPooledStateMachineInClass1.ump"/>
      <exclude name="E095DuplicateEnumerations2.ump"/>
      <exclude name="E096EnumerationNamingConflict1.ump"/>
      <exclude name="E210ConflictMethods1.ump"/>
      <exclude name="E211MoreModifications1.ump"/>
      <exclude name="E219NoBindingParameters1.ump"/>
      <exclude name="E221BoundTypeAvailable.ump"/>
      <exclude name="E224MultipleInheritanceConstraint.ump"/>
      <exclude name="E225SatisfactionOfConstraints.ump"/>
      <exclude name="E235SuperCallConflict.ump"/>
      <exclude name="E3505TemplateReferenceCycle1.ump"/>
      <exclude name="WE1xxIdentifierInvalid1.ump"/>
      <exclude name="WE1xxIdentifierInvalid3.ump"/>
      <exclude name="E112DuplicateConstantsinInterface1.ump"/>
      <exclude name="E081InvalidMultivaluedAttributeAssignment1.ump"/>
      <exclude name="E095DuplicateEnumerations1.ump"/>
      <exclude name="E026DuplicateKeyItem1.ump"/>
      <exclude name="E092ClassIsNotSubclassConstraint1.ump"/>
      <exclude name="E213BidirectionalTraitAssociation.ump"/>
      <exclude name="E220TwoMethodWithSameName1.ump"/>
      <exclude name="E029ConstraintTypeMismatch1.ump"/>
      <exclude name="E018ReflexiveImmutable1.ump"/>
      <exclude name="E083InvalidMultivaluedAttributeInitialization1.ump"/>
      <exclude name="E180DuplicateRoleNameSubclass.ump"/>
      <exclude name="E181AssociationSpecializationInvalidMultiplicity1.ump"/>
      <exclude name="E3504TemplateReferenceCannotBeResolved1.ump"/>
      <exclude name="E219NoBindingParameters.ump"/>
      <exclude name="E3507DuplicateEmitMethodName1.ump"/>
      <exclude name="E096EnumerationNamingConflict2.ump"/>
      <exclude name="E212NoAvailableMethod1.ump"/>
      <exclude name="E3500InvalidTemplateName1.ump"/>
      <exclude name="E217ConflictInTypeofAttributes.ump"/>
      <exclude name="E041NonVoidQueuedMethod1.ump"/>
      <exclude name="E074UserDefinedStateCannotBeNamedFinal1.ump"/>
      <exclude name="E063ReservedNameHistoryState1.ump"/>
      <exclude name="E061RegularQueuedStateMachineInClass1.ump"/>
      <exclude name="E019DuplicateAssociation1.ump"/>
      <exclude name="E024SortKeyNotofUmpleType1.ump"/>
      <exclude name="E230SMAvailability.ump"/>
      <exclude name="E032ReservedRoleName3.ump"/>
      <exclude name="E234NonDeteministicComposition.ump"/>
      <exclude name="E210ConflictMethods2.ump"/>
      <exclude name="E017NonImmutableBidirectionality1.ump"/>
      <exclude name="E232EventAvailability.ump"/>
      <exclude name="E040_singleton_inherited.ump"/>
      <exclude name="E023AttributeAssociationNameClash2.ump"/>
      <exclude name="E215NoAvailableTemplateParameter.ump"/>
      <exclude name="E014ImmutableSubclassofMutable1.ump"/>
      <exclude name="E204CyclicUse1.ump"/>
      <exclude name="E216TwiceBinding.ump"/>
      <exclude name="E038AutogeneratedAttributeNameConflict1.ump"/>
      <exclude name="E093ClassIsNotSuperClassConstraint1.ump"/>
      <exclude name="E005UndefinedClassinAssociation4.ump"/>
      <exclude name="E094NoAssociationFoundConstraint1.ump"/>
      <exclude name="E208NotRequiredMethod.ump"/>
      <exclude name="E212NoAvailableMethod3.ump"/>
      <exclude name="E020InterfaceAssociationNotOneWay2.ump"/>
      <exclude name="E080InvalidAbstractClassAssociation1.ump"/>
      <exclude name="E237UniqueRegionName.ump"/>
      <exclude name="E073DuplicateParallelStateMachineName1.ump"/>
      <exclude name="E080InvalidAbstractClassAssociation2.ump"/>
      <exclude name="E231EventAvailability.ump"/>
      <exclude name="E012ClassIndirectlySubclassofSelf1.ump"/>
      <exclude name="E200InvalidTraitIdentifierE2.ump"/>
      <exclude name="E060RegularPooledStateMachineInClass1.ump"/>
      <exclude name="E059QueuedPooledStateMachineInClass1.ump"/>
      <exclude name="E020InterfaceAssociationNotOneWay1.ump"/>
      <exclude name="E097EnumerationAndStateMachineConflict1.ump"/>
      <exclude name="E034MultipleInheritance2.ump"/>
      <exclude name="E222SatisfactionOfRequiredInterfaces.ump"/>
      <exclude name="E006MissingDefault1.ump"/>
      <exclude name="E004InvalidMultiplicity1.ump"/>
      <exclude name="E223AvailabilityOfTypes.ump"/>
      <exclude name="E051EventParametersMustMatch1.ump"/>
      <exclude name="E064NonExistentHistoryState1.ump"/>
      <exclude name="E052StateMachineNameClash1.ump"/>
      <exclude name="E212NoAvailableMethod2.ump"/>
      <exclude name="E065NoSubstatesHistoryState1.ump"/>
      <exclude name="E205CyclicUse1.ump"/>
      <exclude name="E053NoConcurrencyAtTopLevel1.ump"/>
      <exclude name="E202NotAvailableTraits.ump"/>
      <exclude name="E206SatisfactionOfConstraints.ump"/>
      <exclude name="E052StateMachineNameClash2.ump"/>
      <exclude name="E104EnumerationInBidirectionalAssociation1.ump"/>
      <exclude name="E091AttributeOfTypeNotFoundConstraint1.ump"/>
      <exclude name="E005UndefinedClassinAssociation1.ump"/>
      <exclude name="E097EnumerationAndStateMachineConflict2.ump"/>
      <exclude name="E025SortKeyNotFound1.ump"/>
      <exclude name="E009ReflexiveLowerBound1.ump"/>
      <exclude name="E233RemoveInitialState.ump"/>
      <exclude name="E008AssociationClassMissingEnd1.ump"/>
      <exclude name="E3607PortNameCannotBeResolved1.ump"/>
      <exclude name="E210ConflictMethods4.ump"/>
      <exclude name="E229RenamingTwoTimesStates.ump"/>
      <exclude name="E028ConstraintIdentifierIncorrect1.ump"/>
      <exclude name="E211MoreModifications2.ump"/>
      <exclude name="E032ReservedRoleName1.ump"/>
      <exclude name="E096EnumerationNamingConflict4.ump"/>
      <exclude name="E011ClassisSubclassOfSelf1.ump"/>
      <exclude name="E4500TagNotClosedCorrectly1.ump"/>
      <exclude name="E022DuplicateAttribute1.ump"/>
      <exclude name="E203NotHavingUniqueID.ump"/>
      <exclude name="WE1xxIdentifierInvalid6.ump"/>
      <exclude name="E200InvalidTraitIdentifierE1.ump"/>
      <exclude name="E3501TemplateMethodCannotBeMain1.ump"/>
      <exclude name="E016NonImmutableSuperclass1.ump"/>
      <exclude name="E3503TemplateReferenceRefersToItself1.ump"/>
      <exclude name="E220TwoMethodWithSameName2.ump"/>
      <exclude name="E236TwoStateEntries.ump"/>
      <exclude name="E096EnumerationNamingConflict3.ump"/>
      <exclude name="WE1xxIdentifierInvalid7.ump"/>
      <exclude name="E090AttributeNameNotFoundConstraint1.ump"/>
      <exclude name="E3502TemplateNameNotResolved1.ump"/>
      <exclude name="E075UserDefinedStateMachineCannotBeNamedTimer1.ump"/>
      <exclude name="E105EnumerationInComposition1.ump"/>
      <exclude name="E023AttributeAssociationNameClash1.ump"/>
      <exclude name="E214Twosametemplateparameters.ump"/>
      
    </fileset>  

    <pathconvert pathsep=";" property="cppumpfiles2" refid="cppumpfiles"/>
    
    <echo file="${cpp.path}/allExamplesListCpp.txt">${cppumpfiles2}</echo>

    <replace file="${cpp.path}/allExamplesListCpp.txt" token=";" value="&#10;"/>
    <echo>Umple examples to be tested and RTCpp Compiled are in "${cpp.path}/allExamplesListCpp.txt"</echo>

    <copy file="${cpp.path}/allExamplesListCpp.txt" todir="${dist.dir}/qa"/>

    <!-- Compile in umple to RTCpp and generate the Java -->
      <trycatch>
        <try>
          <java jar="${dist.dir}/${dist.umple.jar}" fork="true" failonerror="true" dir="${cpp.path}">
            <arg value="-g" />
            <arg value="RTCpp" />
            <arg value="--path" />
            <arg value="src-gen-umple" />
            <!--arg value="-r" --> <!-- Uncomment to remove prev generated java+class files before each compile -->
            <arg value="-w" /> <!-- Suppress expected warnings for files starting W -->
            <arg value="-q" /> <!-- Comment out for more verbose trace -->
            <arg value="-c" /> <!-- Do the Java compilation of whatever is produced by Umple -->
            <arg value="-" />
            <!--arg value="-x" --> <!-- Uncomment to use slower exec method of invoking compiler instead of internal -->           
            <arg value="-f" /> <!-- Do separate generation and compilation for each line in this file -->
            <arg value="allExamplesListCpp.txt" />
          </java>
        </try>

        <catch>
          <echo>Failed to compile Umple and/or generate RTCpp code from one or more examples and/or to compile the resulting RTCpp</echo>
          <if>
            <equals arg1="${failfast}" arg2="true" />
            <then>
              <fail message="Failed tests of an Umpleonline or manual example when generating and compiling the RTCpp"/>
            </then>
          </if>
        </catch>
      </trycatch>

  </target>

  <!-- Setup and teardown targets -->

  <target name="testSetup">
    <mkdir dir="${project.output.path}" />

    <if>
      <equals arg1="${failfast}" arg2="true" />
      <then>
        <property name="failsafe" value="false" />
      </then>

      <else>
        <property name="failsafe" value="true" />
      </else>
    </if>
    <if>
      <not>
        <equals arg1="${mode.notjava}" arg2="false" />
      </not>
      <then>
        <mkdir dir="${java.path}" />
        <mkdir dir="${java.path}/src-gen-umple" />
        <mkdir dir="${java.path}/bin" />
        <exec executable="ruby">
          <arg value="build/get_testable_examples.rb" />
          <arg value="-i" />
          <arg value="${manualumpfiles.path}" />
          <arg value="-i" />
          <arg value="${exampleumpfiles.path}" />
          <arg value="-o" />
          <arg value="${java.path}" />
          <arg value="-l" />
          <arg value="java" />
          <arg value="-s" />
          <arg value="${examplepattern}" />
        </exec>
      </then>
    </if>

    <if>
      <not>
        <equals arg1="${mode.notpython}" arg2="false" />
      </not>
      <then>
        <mkdir dir="${python.path}" />
        <mkdir dir="${python.path}/src-gen-umple" />
        <mkdir dir="${python.path}/bin" />
        <exec executable="ruby">
          <arg value="build/get_testable_examples.rb" />
          <arg value="-i" />
          <arg value="${manualumpfiles.path}" />
          <arg value="-i" />
          <arg value="${exampleumpfiles.path}" />
          <arg value="-o" />
          <arg value="${python.path}" />
          <arg value="-l" />
          <arg value="python" />
          <arg value="-s" />
          <arg value="${examplepattern}" />
        </exec>
      </then>
    </if>

    <if>
      <not>
        <equals arg1="${mode.notcpp}" arg2="false" />
      </not>
      <then>
        <mkdir dir="${cpp.path}" />
        <mkdir dir="${cpp.path}/src-gen-umple" />
        <mkdir dir="${cpp.path}/bin" />
        <exec executable="ruby">
          <arg value="build/get_testable_examples.rb" />
          <arg value="-i" />
          <arg value="${manualumpfiles.path}" />
          <arg value="-i" />
          <arg value="${exampleumpfiles.path}" />
          <arg value="-o" />
          <arg value="${cpp.path}" />
          <arg value="-l" />
          <arg value="cpp" />
          <arg value="-s" />
          <arg value="${examplepattern}" />
        </exec>
      </then>
    </if>

    <if>
      <not>
        <equals arg1="${mode.notphp}" arg2="false" />
      </not>
      <then>
        <mkdir dir="${php.path}" />
        <mkdir dir="${php.path}/src-gen-umple" />
        <exec executable="ruby">
          <arg value="build/get_testable_examples.rb" />
          <arg value="-i" />
          <arg value="${manualumpfiles.path}" />
          <arg value="-i" />
          <arg value="${exampleumpfiles.path}" />
          <arg value="-o" />
          <arg value="${php.path}" />
          <arg value="-l" />
          <arg value="php" />
          <arg value="-s" />
          <arg value="${examplepattern}" />
        </exec>
      </then>
    </if>

    <if>
      <not>
        <equals arg1="${mode.notruby}" arg2="false" />
      </not>
      <then>
        <mkdir dir="${ruby.path}" />
        <mkdir dir="${ruby.path}/src-gen-umple" />
        <exec executable="ruby">
          <arg value="build/get_testable_examples.rb" />
          <arg value="-i" />
          <arg value="${manualumpfiles.path}" />
          <arg value="-i" />
          <arg value="${exampleumpfiles.path}" />
          <arg value="-o" />
          <arg value="${ruby.path}" />
          <arg value="-l" />
          <arg value="ruby" />
          <arg value="-s" />
          <arg value="${examplepattern}" />
        </exec>
      </then>
    </if>
  </target>

  <target name="deleteTempFolders">
    <delete dir="${project.output.path}" failonerror="false" />
    <delete dir="./build/txl" failonerror="false" />
    <delete dir="./txl" failonerror="false" />
  </target>

  <target name="startLog">
    <property name="fulllogfile" location="build/${logfile}" />
    <touch file="${fulllogfile}" />
    <record name="${fulllogfile}" action="start" loglevel="info" />
  </target>

  <target name="finishLog">
    <exec executable="ruby">
      <arg value="build/parallel_output_builder.rb" />
      <arg value="${fulllogfile}"/>
      <arg value="${project.output.path}"/>
    </exec>
  </target>

  <target name="checkRuby">
    <condition property="mode.notruby">
      <isfalse value="${allowruby}" />
    </condition>
    <echo>NotRuby: ${mode.notruby}</echo>
  </target>

  <target name="checkCpp">
    <condition property="mode.notcpp">
      <isfalse value="${allowcpp}" />
    </condition>
    <echo>Not C++: ${mode.notcpp}</echo>
  </target>
</project>
