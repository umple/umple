/************
This file is an Umple translation of a model
of perceptory version 1.14 found at the following URL
https://github.com/atlanmod/atlantic-zoo/blob/main/AtlantEcore/Perceptory.ecore

date : 2006/07/24

Domain :

Description : This metamodel describes Perceptory. Perceptory is a CASE tool that comprises a UML based conceptual schema building tool for geospatial conceptual models and an object dictionary database.

Title: Perceptory

See : http://delivery.acm.org/10.1145/360000/355280/p39-brodeur.pdf?key1=355280&key2=5650095511&coll=&dl=GUIDE&CFID=15151515&CFTOKEN=6184618

Authors : Youssef Srour (Srour.youssef_NOSPAM <AT> gmail.com)
***************/

namespace Perceptory;

class RelationSchip
{
	0..1 relationSchip -- * Package packages;
	* relationSchip -- * Steriotype steriotype;
	* relationSchip -- * Constraint constraint;
	1..* relationSchip -- * Characteristic affectCharacteristic;
}

class ConstrainedRelationSchip
{
}

class Aggregation
{
	isA Association;
}

class Composition
{
	isA Association;
}

class Association
{
	isA RelationSchip;
}

class Generalisation
{
	isA RelationSchip;
}

class Dependency
{
	isA RelationSchip;
}

class AssociationEnd
{
}

class Package
{
	* parent -- * Package children;
	* thePackage -- * Steriotype steriotype;
	* packages -- * Class classes;
}

class Steriotype
{
	* steriotype -- * Class theClass;
	* steriotype -- * Operation operations;
	* steriotype -- * DescriptiveAttribute descriptiveAttribute;
}

class Class
{
	0..1 affectFeature -- 1..* Operation operations;
	1..* theClass -- * Constraint constraint;
	1..* behaviour -- * Operation myOperations;
	1..* theClass -- * Characteristic characteristic;
	1..* theClass -- * MetaData details;
}

class Constraint
{
	* constraint -- 1..* Characteristic caracteristic;
}

class Operation
{
	1..* operations -- 1..* Characteristic inCharacteristic;
	1..* operations -- * MetaData detail;
}

class Characteristic
{
	1..* characteristic -- * BusnissRule rule;
	1..* characteristic -- * MetaData details;
}

class BusnissRule
{
}

class MetaData
{
	1..* metaData -- * Source source;
}

class Source
{
}

class Domain
{
	* domain -- 1..* DescriptiveAttribute descriptiveAttribute;
}

class DescriptiveAttribute
{
	isA Characteristic;
	1..* descriptiveAttributeg -- * Geometry specialDef;
	1..* descriptiveAttributet -- * Temporality tempsDef;
}

class Geometry
{
	isA PerceptorySteriotype ;
	* geometry -- * Temporality tempsDef;
}

class Temporality
{
	isA PerceptorySteriotype ;
}

class VisualInfo
{
	isA PerceptorySteriotype ;
}

class Value
{
	1..* value -- 1..* EnumeratedDomain enumeratedDomain;
}

class RangeDomain
{
	isA Domain;
}

class EnumeratedDomain
{
	isA Domain;
}

class PerceptorySteriotype
{
	isA Steriotype;
}