/*
In this example the Supplier and Vendor Class both inherit the distributable property from the Agent Class

Example Taken from
https://ruor.uottawa.ca/bitstream/10393/37143/5/Zakariapour_Amid_2018_thesis.pdf
*/

class Warehouse
{
 distributable;
}
class Agent
{
   distributable;
}
class Customer
{
 distributable;
}

class Warehouse
{
 name;
 public Product findProduct(ProductType productType)
 {
 for(ProductTypeInWarehouse ptiw:getProductTypeInWarehouses())
 {
 if(ptiw.getProductType().equals(productType))
 {
 for(Product p : ptiw.getProducts())
 return p;
 }
 }
 return null;
 }
 public void addProduct(Product p)
 {
 for(ProductTypeInWarehouse ptiw : getProductTypeInWarehouses())
 {
 if(ptiw.getProductType().equals(p.getProductType()))
 {
 ptiw.addProduct(p);
 return;
 }
 }
 ProductTypeInWarehouse ptiw = new ProductTypeInWarehouse(p.getProductType());
 ptiw.addProduct(p);
 addProductTypeInWarehous(ptiw);
 }
}

class Product
{
 immutable;
 serialNumber;
 * -> 1 ProductType;
}
class ProductType
{
 immutable;
 name;
 key {name};
}
class ProductTypeInWarehouse
{
 * -> 1 ProductType;
 * <- 0..1 Warehouse;
 0..1 -> * Product;
}

class Agent
{
 name;
 * -- * Warehouse;
}

class Supplier
{
 isA Agent;
 0..1 -> * Product;
 public Product createProduct(String serialNumber, String productType)
 {
 Product aProduct=new Product(serialNumber,new ProductType(productType));
 addProduct(aProduct);
 return aProduct;
    }
 public void putInWarehouse(Product aProduct,Warehouse warehouse)
 {
 warehouse.addProduct(aProduct);
 }
}

class Vendor
{
 isA Agent;
 public Product findProduct(ProductType productType)
 {
 for(Warehouse w:getWarehouses())
 {
 Product p= w.findProduct(productType);
 if(p!=null)
 return p;
 }
 return null;
 }
 public Order makeOrder(Customer aCustomer, Product aProduct)
 { if(aProduct==null)
 return null;
 Order aOrder= new Order(aProduct);
 aOrder.setCustomer(aCustomer);
 aOrder.setVendor(this);
 return aOrder;
 }
}

class Order
{
 * -- 0..1 Customer;
 * -- 0..1 Vendor;
 * -> 1 Product;
}

class Customer
{
 name;
 * -- * Vendor;
 public Order orderProduct(String productType,String vendorName)
 {
 for(Vendor v: getVendors())
 {
 if(v.getName().equals(vendorName))
 return v.makeOrder(this,v.findProduct(new ProductType(productType)));
 }
 return null;
 }
}