<?php
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

class X
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //X State Machines
  private static $SmS0 = 1;
  private static $SmS1 = 2;
  private static $SmS0T1Null = 3;
  private static $SmS0T1T1 = 4;
  private static $SmS0T2Null = 5;
  private static $SmS0T2T2 = 6;
  private static $SmS0T2T3 = 7;
  private static $SmS1T1Null = 8;
  private static $SmS1T1T1 = 9;
  private static $SmS1T1T4 = 10;
  private static $SmS1T2Null = 11;
  private static $SmS1T2T2 = 12;
  private static $SmS1T2T5 = 13;
  private $sm;
  private $smS0T1;
  private $smS0T2;
  private $smS1T1;
  private $smS1T2;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public function __construct()
  {
    $this->setSmS0T1(self::$SmS0T1Null);
    $this->setSmS0T2(self::$SmS0T2Null);
    $this->setSmS1T1(self::$SmS1T1Null);
    $this->setSmS1T2(self::$SmS1T2Null);
    $this->setSm(self::$SmS0);
  }

  //------------------------
  // INTERFACE
  //------------------------

  public function getSmFullName()
  {
    $answer = $this->getSm();
    if ($this->smS0T1 != self::$SmS0T1Null) { $answer .= "." . $this->getSmS0T1(); }
    if ($this->smS0T2 != self::$SmS0T2Null) { $answer .= "." . $this->getSmS0T2(); }
    if ($this->smS1T1 != self::$SmS1T1Null) { $answer .= "." . $this->getSmS1T1(); }
    if ($this->smS1T2 != self::$SmS1T2Null) { $answer .= "." . $this->getSmS1T2(); }
    return $answer;
  }

  public function getSm()
  {
    if ($this->sm == self::$SmS0) { return "SmS0"; }
    elseif ($this->sm == self::$SmS1) { return "SmS1"; }
    return null;
  }

  public function getSmS0T1()
  {
    if ($this->smS0T1 == self::$SmS0T1Null) { return "SmS0T1Null"; }
    elseif ($this->smS0T1 == self::$SmS0T1T1) { return "SmS0T1T1"; }
    return null;
  }

  public function getSmS0T2()
  {
    if ($this->smS0T2 == self::$SmS0T2Null) { return "SmS0T2Null"; }
    elseif ($this->smS0T2 == self::$SmS0T2T2) { return "SmS0T2T2"; }
    elseif ($this->smS0T2 == self::$SmS0T2T3) { return "SmS0T2T3"; }
    return null;
  }

  public function getSmS1T1()
  {
    if ($this->smS1T1 == self::$SmS1T1Null) { return "SmS1T1Null"; }
    elseif ($this->smS1T1 == self::$SmS1T1T1) { return "SmS1T1T1"; }
    elseif ($this->smS1T1 == self::$SmS1T1T4) { return "SmS1T1T4"; }
    return null;
  }

  public function getSmS1T2()
  {
    if ($this->smS1T2 == self::$SmS1T2Null) { return "SmS1T2Null"; }
    elseif ($this->smS1T2 == self::$SmS1T2T2) { return "SmS1T2T2"; }
    elseif ($this->smS1T2 == self::$SmS1T2T5) { return "SmS1T2T5"; }
    return null;
  }

  private function enterS0()
  {
    $wasEventProcessed = false;
    
    $aSmS0T1 = $this->smS0T1;
    $aSmS0T2 = $this->smS0T2;
    if ($aSmS0T1 == self::$SmS0T1Null)
    {
      $this->setSmS0T1(self::$SmS0T1T1);
      $wasEventProcessed = true;
    }

    
    if ($aSmS0T2 == self::$SmS0T2Null)
    {
      $this->setSmS0T2(self::$SmS0T2T2);
      $wasEventProcessed = true;
    }
    return $wasEventProcessed;
  }

  private function exitS0()
  {
    $wasEventProcessed = false;
    
    $aSmS0T1 = $this->smS0T1;
    $aSmS0T2 = $this->smS0T2;
    if ($aSmS0T1 == self::$SmS0T1T1)
    {
      $this->setSmS0T1(self::$SmS0T1Null);
      $wasEventProcessed = true;
    }

    
    if ($aSmS0T2 == self::$SmS0T2T2)
    {
      $this->setSmS0T2(self::$SmS0T2Null);
      $wasEventProcessed = true;
    }
    elseif ($aSmS0T2 == self::$SmS0T2T3)
    {
      $this->setSmS0T2(self::$SmS0T2Null);
      $wasEventProcessed = true;
    }
    return $wasEventProcessed;
  }

  public function goS1()
  {
    $wasEventProcessed = false;
    
    $aSmS0T1 = $this->smS0T1;
    if ($aSmS0T1 == self::$SmS0T1T1)
    {
      $this->exitSmS0T1();
      $this->setSm(self::$SmS1);
      $wasEventProcessed = true;
    }
    return $wasEventProcessed;
  }

  public function goT3()
  {
    $wasEventProcessed = false;
    
    $aSmS0T2 = $this->smS0T2;
    if ($aSmS0T2 == self::$SmS0T2T2)
    {
      $this->exitSmS0T2();
      $this->setSmS0T2(self::$SmS0T2T3);
      $wasEventProcessed = true;
    }
    return $wasEventProcessed;
  }

  private function enterS1()
  {
    $wasEventProcessed = false;
    
    $aSmS1T1 = $this->smS1T1;
    $aSmS1T2 = $this->smS1T2;
    if ($aSmS1T1 == self::$SmS1T1Null)
    {
      $this->setSmS1T1(self::$SmS1T1T1);
      $wasEventProcessed = true;
    }

    
    if ($aSmS1T2 == self::$SmS1T2Null)
    {
      $this->setSmS1T2(self::$SmS1T2T2);
      $wasEventProcessed = true;
    }
    return $wasEventProcessed;
  }

  private function exitS1()
  {
    $wasEventProcessed = false;
    
    $aSmS1T1 = $this->smS1T1;
    $aSmS1T2 = $this->smS1T2;
    if ($aSmS1T1 == self::$SmS1T1T1)
    {
      $this->setSmS1T1(self::$SmS1T1Null);
      $wasEventProcessed = true;
    }
    elseif ($aSmS1T1 == self::$SmS1T1T4)
    {
      $this->setSmS1T1(self::$SmS1T1Null);
      $wasEventProcessed = true;
    }

    
    if ($aSmS1T2 == self::$SmS1T2T2)
    {
      $this->setSmS1T2(self::$SmS1T2Null);
      $wasEventProcessed = true;
    }
    elseif ($aSmS1T2 == self::$SmS1T2T5)
    {
      $this->setSmS1T2(self::$SmS1T2Null);
      $wasEventProcessed = true;
    }
    return $wasEventProcessed;
  }

  public function goT4()
  {
    $wasEventProcessed = false;
    
    $aSmS1T1 = $this->smS1T1;
    if ($aSmS1T1 == self::$SmS1T1T1)
    {
      $this->exitSmS1T1();
      $this->setSmS1T1(self::$SmS1T1T4);
      $wasEventProcessed = true;
    }
    return $wasEventProcessed;
  }

  public function goT5()
  {
    $wasEventProcessed = false;
    
    $aSmS1T2 = $this->smS1T2;
    if ($aSmS1T2 == self::$SmS1T2T2)
    {
      $this->exitSmS1T2();
      $this->setSmS1T2(self::$SmS1T2T5);
      $wasEventProcessed = true;
    }
    return $wasEventProcessed;
  }

  private function exitSm()
  {
    if ($this->sm == self::$SmS0)
    {
      $this->exitS0();
    }
    elseif ($this->sm == self::$SmS1)
    {
      $this->exitS1();
    }
  }

  private function setSm($aSm)
  {
    $this->sm = $aSm;

    // entry actions and do activities
    if ($this->sm == self::$SmS0)
    {
      if ($this->smS0T1 == self::$SmS0T1Null) { $this->setSmS0T1(self::$SmS0T1T1); }
      if ($this->smS0T2 == self::$SmS0T2Null) { $this->setSmS0T2(self::$SmS0T2T2); }
    }
    elseif ($this->sm == self::$SmS1)
    {
      if ($this->smS1T1 == self::$SmS1T1Null) { $this->setSmS1T1(self::$SmS1T1T1); }
      if ($this->smS1T2 == self::$SmS1T2Null) { $this->setSmS1T2(self::$SmS1T2T2); }
    }
  }

  private function exitSmS0T1()
  {
    if ($this->smS0T1 == self::$SmS0T1T1)
    {
      s0_t1_exit();
    }
  }

  private function setSmS0T1($aSmS0T1)
  {
    $this->smS0T1 = $aSmS0T1;
    if ($this->sm != self::$SmS0 && $aSmS0T1 != self::$SmS0T1Null) { $this->setSm(self::$SmS0); }

    // entry actions and do activities
    if ($this->smS0T1 == self::$SmS0T1T1)
    {
      s0_t1_entry();
    }
  }

  private function exitSmS0T2()
  {
    if ($this->smS0T2 == self::$SmS0T2T2)
    {
      s0_t2_exit();
    }
  }

  private function setSmS0T2($aSmS0T2)
  {
    $this->smS0T2 = $aSmS0T2;
    if ($this->sm != self::$SmS0 && $aSmS0T2 != self::$SmS0T2Null) { $this->setSm(self::$SmS0); }

    // entry actions and do activities
    if ($this->smS0T2 == self::$SmS0T2T2)
    {
      s0_t2_entry();
    }
  }

  private function exitSmS1T1()
  {
    if ($this->smS1T1 == self::$SmS1T1T1)
    {
      s1_t1_exit();
    }
  }

  private function setSmS1T1($aSmS1T1)
  {
    $this->smS1T1 = $aSmS1T1;
    if ($this->sm != self::$SmS1 && $aSmS1T1 != self::$SmS1T1Null) { $this->setSm(self::$SmS1); }

    // entry actions and do activities
    if ($this->smS1T1 == self::$SmS1T1T1)
    {
      s1_t1_entry();
    }
  }

  private function exitSmS1T2()
  {
    if ($this->smS1T2 == self::$SmS1T2T2)
    {
      s1_t2_exit();
    }
  }

  private function setSmS1T2($aSmS1T2)
  {
    $this->smS1T2 = $aSmS1T2;
    if ($this->sm != self::$SmS1 && $aSmS1T2 != self::$SmS1T2Null) { $this->setSm(self::$SmS1); }

    // entry actions and do activities
    if ($this->smS1T2 == self::$SmS1T2T2)
    {
      s1_t2_entry();
    }
  }

  public function equals($compareTo)
  {
    return $this === $compareTo;
  }

  public function delete()
  {}

  public function s0_t1_entry()
  {
    
  }

  public function s0_t2_entry()
  {
    
  }

  public function s1_t1_entry()
  {
    
  }

  public function s1_t2_entry()
  {
    
  }

  public function s0_t1_exit()
  {
    
  }

  public function s0_t2_exit()
  {
    
  }

  public function s1_t1_exit()
  {
    
  }

  public function s1_t2_exit()
  {
    
  }

}
?>
