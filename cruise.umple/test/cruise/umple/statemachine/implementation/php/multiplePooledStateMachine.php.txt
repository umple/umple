<?php
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.22.0.5146 modeling language!*/

class X
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //X State Machines
  private static $SmS1 = 1;
  private static $SmS2 = 2;
  private $sm;

  private static $Sm1S3 = 1;
  private static $Sm1S4 = 2;
  private static $Sm1S5 = 3;
  private $sm1;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public function __construct()
  {
    $this->setSm(self::$SmS1);
    $this->setSm1(self::$Sm1S3);
  }

  //------------------------
  // INTERFACE
  //------------------------

  public function getSmFullName()
  {
    $answer = $this->getSm();
    return $answer;
  }

  public function getSm1FullName()
  {
    $answer = $this->getSm1();
    return $answer;
  }

  public function getSm()
  {
    if ($this->sm == self::$SmS1) { return "SmS1"; }
    elseif ($this->sm == self::$SmS2) { return "SmS2"; }
    return null;
  }

  public function getSm1()
  {
    if ($this->sm1 == self::$Sm1S3) { return "Sm1S3"; }
    elseif ($this->sm1 == self::$Sm1S4) { return "Sm1S4"; }
    elseif ($this->sm1 == self::$Sm1S5) { return "Sm1S5"; }
    return null;
  }

  public function e1()
  {
    $wasEventProcessed = false;
    
    $aSm = $this->sm;
    if ($aSm == self::$SmS1)
    {
      $this->setSm(self::$SmS2);
      $wasEventProcessed = true;
    }
    return $wasEventProcessed;
  }

  public function e2()
  {
    $wasEventProcessed = false;
    
    $aSm = $this->sm;
    if ($aSm == self::$SmS2)
    {
      $this->setSm(self::$SmS1);
      $wasEventProcessed = true;
    }
    return $wasEventProcessed;
  }

  public function e3()
  {
    $wasEventProcessed = false;
    
    $aSm1 = $this->sm1;
    if ($aSm1 == self::$Sm1S3)
    {
      $this->setSm1(self::$Sm1S4);
      $wasEventProcessed = true;
    }
    return $wasEventProcessed;
  }

  public function e4()
  {
    $wasEventProcessed = false;
    
    $aSm1 = $this->sm1;
    if ($aSm1 == self::$Sm1S4)
    {
      $this->setSm1(self::$Sm1S3);
      $wasEventProcessed = true;
    }
    return $wasEventProcessed;
  }

  private function setSm($aSm)
  {
    $this->sm = $aSm;
  }

  private function setSm1($aSm1)
  {
    $this->sm1 = $aSm1;
  }

  public function equals($compareTo)
  {
    return $this === $compareTo;
  }

  public function delete()
  {}

}
?>
