/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

package example;


public class Mentor
{

  //------------------------
  // STATIC VARIABLES
  //------------------------

  private static Mentor theInstance = null;

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Mentor Attributes
  private String name;

  //Mentor Associations
  private Student student;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  private Mentor()
  {
    name = null;
  }

  public static Mentor getInstance()
  {
    if(theInstance == null)
    {
      theInstance = new Mentor();
    }
    return theInstance;
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setName(String aName)
  {
    boolean wasSet = false;
    name = aName;
    wasSet = true;
    return wasSet;
  }

  public String getName()
  {
    return name;
  }
  /* Code from template association_GetOne */
  public Student getStudent()
  {
    return student;
  }

  public boolean hasStudent()
  {
    boolean has = student != null;
    return has;
  }
  /* Code from template association_SetOptionalOneToOne */
  public boolean setStudent(Student aNewStudent)
  {
    boolean wasSet = false;
    if (student != null && !student.equals(aNewStudent) && equals(student.getMentor()))
    {
      //Unable to setStudent, as existing student would become an orphan
      return wasSet;
    }

    student = aNewStudent;
    Mentor anOldMentor = aNewStudent != null ? aNewStudent.getMentor() : null;

    if (!this.equals(anOldMentor))
    {
      if (anOldMentor != null)
      {
        anOldMentor.student = null;
      }
      if (student != null)
      {
        student.setMentor(this);
      }
    }
    wasSet = true;
    return wasSet;
  }

  public void delete()
  {
    Student existingStudent = student;
    student = null;
    if (existingStudent != null)
    {
      existingStudent.delete();
    }
  }


  public String toString()
  {
    return super.toString() + "["+
            "name" + ":" + getName()+ "]" + System.getProperties().getProperty("line.separator") +
            "  " + "student = "+(getStudent()!=null?Integer.toHexString(System.identityHashCode(getStudent())):"null");
  }
}