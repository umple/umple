/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

package example;


public class Student
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Student Attributes
  private String number;

  //Student Associations
  private Mentor mentor;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public Student(String aNumber, Mentor aMentor)
  {
    number = aNumber;
    boolean didAddMentor = setMentor(aMentor);
    if (!didAddMentor)
    {
      throw new RuntimeException("Unable to create student due to mentor. See https://manual.umple.org?RE002ViolationofAssociationMultiplicity.html");
    }
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setNumber(String aNumber)
  {
    boolean wasSet = false;
    number = aNumber;
    wasSet = true;
    return wasSet;
  }

  public String getNumber()
  {
    return number;
  }
  /* Code from template association_GetOne */
  public Mentor getMentor()
  {
    return mentor;
  }
  /* Code from template association_SetOneToOptionalOne */
  public boolean setMentor(Mentor aNewMentor)
  {
    boolean wasSet = false;
    if (aNewMentor == null)
    {
      //Unable to setMentor to null, as student must always be associated to a mentor
      return wasSet;
    }
    
    Student existingStudent = aNewMentor.getStudent();
    if (existingStudent != null && !equals(existingStudent))
    {
      //Unable to setMentor, the current mentor already has a student, which would be orphaned if it were re-assigned
      return wasSet;
    }
    
    Mentor anOldMentor = mentor;
    mentor = aNewMentor;
    mentor.setStudent(this);

    if (anOldMentor != null)
    {
      anOldMentor.setStudent(null);
    }
    wasSet = true;
    return wasSet;
  }

  public void delete()
  {
    Mentor existingMentor = mentor;
    mentor = null;
    if (existingMentor != null)
    {
      existingMentor.setStudent(null);
    }
  }


  public String toString()
  {
    return super.toString() + "["+
            "number" + ":" + getNumber()+ "]" + System.getProperties().getProperty("line.separator") +
            "  " + "mentor = "+(getMentor()!=null?Integer.toHexString(System.identityHashCode(getMentor())):"null");
  }
}