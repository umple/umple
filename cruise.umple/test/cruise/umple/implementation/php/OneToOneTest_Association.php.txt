<?php
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

class Mentor
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Mentor Attributes
  private $name;
  private $id;

  //Mentor Associations
  private $student;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public function __construct($aName = null, $aStudent = null)
  {
    if (func_num_args() == 0) { return; }

    $this->name = $aName;
    $this->id = NULL;
    if ($aStudent == null || $aStudent->getMentor() != null)
    {
      throw new Exception("Unable to create Mentor due to aStudent. See https://manual.umple.org?RE002ViolationofAssociationMultiplicity.html");
    }
    $this->student = $aStudent;
  }
  public static function newInstance($aName, $aNameForStudent, $aNumberForStudent)
  {
    $thisInstance = new Mentor();
    $thisInstance->name = $aName;
    $thisInstance->id = NULL;
    $thisInstance->student = new Student($aNameForStudent, $aNumberForStudent, $thisInstance);
    return $thisInstance;
  }

  //------------------------
  // INTERFACE
  //------------------------

  public function setName($aName)
  {
    $wasSet = false;
    $this->name = $aName;
    $wasSet = true;
    return $wasSet;
  }

  public function setId($aId)
  {
    $wasSet = false;
    $this->id = $aId;
    $wasSet = true;
    return $wasSet;
  }

  public function getName()
  {
    return $this->name;
  }

  public function getId()
  {
    return $this->id;
  }

  public function getStudent()
  {
    return $this->student;
  }

  public function equals($compareTo)
  {
    return $this === $compareTo;
  }

  public function delete()
  {
    $existingStudent = $this->student;
    $this->student = null;
    if ($existingStudent != null)
    {
      $existingStudent->delete();
    }
  }

}
?>
